// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: discovery/protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Discovery {

  /// <summary>Holder for reflection information generated from discovery/protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for discovery/protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhkaXNjb3ZlcnkvcHJvdG9jb2wucHJvdG8SCWRpc2NvdmVyeRoUZ29zc2lw",
            "L21lc3NhZ2UucHJvdG8aFG1zcC9tc3BfY29uZmlnLnByb3RvGhRtc3AvaWRl",
            "bnRpdGllcy5wcm90byIzCg1TaWduZWRSZXF1ZXN0Eg8KB3BheWxvYWQYASAB",
            "KAwSEQoJc2lnbmF0dXJlGAIgASgMIlkKB1JlcXVlc3QSKwoOYXV0aGVudGlj",
            "YXRpb24YASABKAsyEy5kaXNjb3ZlcnkuQXV0aEluZm8SIQoHcXVlcmllcxgC",
            "IAMoCzIQLmRpc2NvdmVyeS5RdWVyeSIzCghSZXNwb25zZRInCgdyZXN1bHRz",
            "GAEgAygLMhYuZGlzY292ZXJ5LlF1ZXJ5UmVzdWx0IkEKCEF1dGhJbmZvEhcK",
            "D2NsaWVudF9pZGVudGl0eRgBIAEoDBIcChRjbGllbnRfdGxzX2NlcnRfaGFz",
            "aBgCIAEoDCLoAQoFUXVlcnkSDwoHY2hhbm5lbBgBIAEoCRIuCgxjb25maWdf",
            "cXVlcnkYAiABKAsyFi5kaXNjb3ZlcnkuQ29uZmlnUXVlcnlIABI0CgpwZWVy",
            "X3F1ZXJ5GAMgASgLMh4uZGlzY292ZXJ5LlBlZXJNZW1iZXJzaGlwUXVlcnlI",
            "ABItCghjY19xdWVyeRgEIAEoCzIZLmRpc2NvdmVyeS5DaGFpbmNvZGVRdWVy",
            "eUgAEjAKC2xvY2FsX3BlZXJzGAUgASgLMhkuZGlzY292ZXJ5LkxvY2FsUGVl",
            "clF1ZXJ5SABCBwoFcXVlcnki2QEKC1F1ZXJ5UmVzdWx0EiEKBWVycm9yGAEg",
            "ASgLMhAuZGlzY292ZXJ5LkVycm9ySAASMAoNY29uZmlnX3Jlc3VsdBgCIAEo",
            "CzIXLmRpc2NvdmVyeS5Db25maWdSZXN1bHRIABI3CgxjY19xdWVyeV9yZXMY",
            "AyABKAsyHy5kaXNjb3ZlcnkuQ2hhaW5jb2RlUXVlcnlSZXN1bHRIABIyCgdt",
            "ZW1iZXJzGAQgASgLMh8uZGlzY292ZXJ5LlBlZXJNZW1iZXJzaGlwUmVzdWx0",
            "SABCCAoGcmVzdWx0Ig0KC0NvbmZpZ1F1ZXJ5IoICCgxDb25maWdSZXN1bHQS",
            "LwoEbXNwcxgBIAMoCzIhLmRpc2NvdmVyeS5Db25maWdSZXN1bHQuTXNwc0Vu",
            "dHJ5EjcKCG9yZGVyZXJzGAIgAygLMiUuZGlzY292ZXJ5LkNvbmZpZ1Jlc3Vs",
            "dC5PcmRlcmVyc0VudHJ5GkEKCU1zcHNFbnRyeRILCgNrZXkYASABKAkSIwoF",
            "dmFsdWUYAiABKAsyFC5tc3AuRmFicmljTVNQQ29uZmlnOgI4ARpFCg1PcmRl",
            "cmVyc0VudHJ5EgsKA2tleRgBIAEoCRIjCgV2YWx1ZRgCIAEoCzIULmRpc2Nv",
            "dmVyeS5FbmRwb2ludHM6AjgBIkMKE1BlZXJNZW1iZXJzaGlwUXVlcnkSLAoG",
            "ZmlsdGVyGAEgASgLMhwuZGlzY292ZXJ5LkNoYWluY29kZUludGVyZXN0IqIB",
            "ChRQZWVyTWVtYmVyc2hpcFJlc3VsdBJFCgxwZWVyc19ieV9vcmcYASADKAsy",
            "Ly5kaXNjb3ZlcnkuUGVlck1lbWJlcnNoaXBSZXN1bHQuUGVlcnNCeU9yZ0Vu",
            "dHJ5GkMKD1BlZXJzQnlPcmdFbnRyeRILCgNrZXkYASABKAkSHwoFdmFsdWUY",
            "AiABKAsyEC5kaXNjb3ZlcnkuUGVlcnM6AjgBIkEKDkNoYWluY29kZVF1ZXJ5",
            "Ei8KCWludGVyZXN0cxgBIAMoCzIcLmRpc2NvdmVyeS5DaGFpbmNvZGVJbnRl",
            "cmVzdCJBChFDaGFpbmNvZGVJbnRlcmVzdBIsCgpjaGFpbmNvZGVzGAEgAygL",
            "MhguZGlzY292ZXJ5LkNoYWluY29kZUNhbGwiNwoNQ2hhaW5jb2RlQ2FsbBIM",
            "CgRuYW1lGAEgASgJEhgKEGNvbGxlY3Rpb25fbmFtZXMYAiADKAkiSQoUQ2hh",
            "aW5jb2RlUXVlcnlSZXN1bHQSMQoHY29udGVudBgBIAMoCzIgLmRpc2NvdmVy",
            "eS5FbmRvcnNlbWVudERlc2NyaXB0b3IiEAoOTG9jYWxQZWVyUXVlcnki8AEK",
            "FUVuZG9yc2VtZW50RGVzY3JpcHRvchIRCgljaGFpbmNvZGUYASABKAkSVAoT",
            "ZW5kb3JzZXJzX2J5X2dyb3VwcxgCIAMoCzI3LmRpc2NvdmVyeS5FbmRvcnNl",
            "bWVudERlc2NyaXB0b3IuRW5kb3JzZXJzQnlHcm91cHNFbnRyeRIiCgdsYXlv",
            "dXRzGAMgAygLMhEuZGlzY292ZXJ5LkxheW91dBpKChZFbmRvcnNlcnNCeUdy",
            "b3Vwc0VudHJ5EgsKA2tleRgBIAEoCRIfCgV2YWx1ZRgCIAEoCzIQLmRpc2Nv",
            "dmVyeS5QZWVyczoCOAEiiQEKBkxheW91dBJFChNxdWFudGl0aWVzX2J5X2dy",
            "b3VwGAEgAygLMiguZGlzY292ZXJ5LkxheW91dC5RdWFudGl0aWVzQnlHcm91",
            "cEVudHJ5GjgKFlF1YW50aXRpZXNCeUdyb3VwRW50cnkSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgNOgI4ASInCgVQZWVycxIeCgVwZWVycxgBIAMoCzIP",
            "LmRpc2NvdmVyeS5QZWVyImkKBFBlZXISJAoKc3RhdGVfaW5mbxgBIAEoCzIQ",
            "Lmdvc3NpcC5FbnZlbG9wZRIpCg9tZW1iZXJzaGlwX2luZm8YAiABKAsyEC5n",
            "b3NzaXAuRW52ZWxvcGUSEAoIaWRlbnRpdHkYAyABKAwiGAoFRXJyb3ISDwoH",
            "Y29udGVudBgBIAEoCSIyCglFbmRwb2ludHMSJQoIZW5kcG9pbnQYASADKAsy",
            "Ey5kaXNjb3ZlcnkuRW5kcG9pbnQiJgoIRW5kcG9pbnQSDAoEaG9zdBgBIAEo",
            "CRIMCgRwb3J0GAIgASgNMkgKCURpc2NvdmVyeRI7CghEaXNjb3ZlchIYLmRp",
            "c2NvdmVyeS5TaWduZWRSZXF1ZXN0GhMuZGlzY292ZXJ5LlJlc3BvbnNlIgBC",
            "MFouZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMvcHJvdG9zL2Rpc2Nv",
            "dmVyeWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gossip.MessageReflection.Descriptor, global::Msp.MspConfigReflection.Descriptor, global::Msp.IdentitiesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.SignedRequest), global::Discovery.SignedRequest.Parser, new[]{ "Payload", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Request), global::Discovery.Request.Parser, new[]{ "Authentication", "Queries" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Response), global::Discovery.Response.Parser, new[]{ "Results" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.AuthInfo), global::Discovery.AuthInfo.Parser, new[]{ "ClientIdentity", "ClientTlsCertHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Query), global::Discovery.Query.Parser, new[]{ "Channel", "ConfigQuery", "PeerQuery", "CcQuery", "LocalPeers" }, new[]{ "Query" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.QueryResult), global::Discovery.QueryResult.Parser, new[]{ "Error", "ConfigResult", "CcQueryRes", "Members" }, new[]{ "Result" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.ConfigQuery), global::Discovery.ConfigQuery.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.ConfigResult), global::Discovery.ConfigResult.Parser, new[]{ "Msps", "Orderers" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.PeerMembershipQuery), global::Discovery.PeerMembershipQuery.Parser, new[]{ "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.PeerMembershipResult), global::Discovery.PeerMembershipResult.Parser, new[]{ "PeersByOrg" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.ChaincodeQuery), global::Discovery.ChaincodeQuery.Parser, new[]{ "Interests" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.ChaincodeInterest), global::Discovery.ChaincodeInterest.Parser, new[]{ "Chaincodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.ChaincodeCall), global::Discovery.ChaincodeCall.Parser, new[]{ "Name", "CollectionNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.ChaincodeQueryResult), global::Discovery.ChaincodeQueryResult.Parser, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.LocalPeerQuery), global::Discovery.LocalPeerQuery.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.EndorsementDescriptor), global::Discovery.EndorsementDescriptor.Parser, new[]{ "Chaincode", "EndorsersByGroups", "Layouts" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Layout), global::Discovery.Layout.Parser, new[]{ "QuantitiesByGroup" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Peers), global::Discovery.Peers.Parser, new[]{ "Peers_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Peer), global::Discovery.Peer.Parser, new[]{ "StateInfo", "MembershipInfo", "Identity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Error), global::Discovery.Error.Parser, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Endpoints), global::Discovery.Endpoints.Parser, new[]{ "Endpoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discovery.Endpoint), global::Discovery.Endpoint.Parser, new[]{ "Host", "Port" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// SignedRequest contains a serialized Request in the payload field
  /// and a signature.
  /// The identity that is used to verify the signature
  /// can be extracted from the authentication field of type AuthInfo
  /// in the Request itself after deserializing it.
  /// </summary>
  public sealed partial class SignedRequest : pb::IMessage<SignedRequest> {
    private static readonly pb::MessageParser<SignedRequest> _parser = new pb::MessageParser<SignedRequest>(() => new SignedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedRequest(SignedRequest other) : this() {
      payload_ = other.payload_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedRequest Clone() {
      return new SignedRequest(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignedRequest other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request contains authentication info about the client that sent the request
  /// and the queries it wishes to query the service
  /// </summary>
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      authentication_ = other.authentication_ != null ? other.authentication_.Clone() : null;
      queries_ = other.queries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "authentication" field.</summary>
    public const int AuthenticationFieldNumber = 1;
    private global::Discovery.AuthInfo authentication_;
    /// <summary>
    /// authentication contains information that the service uses to check
    /// the client's eligibility for the queries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.AuthInfo Authentication {
      get { return authentication_; }
      set {
        authentication_ = value;
      }
    }

    /// <summary>Field number for the "queries" field.</summary>
    public const int QueriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discovery.Query> _repeated_queries_codec
        = pb::FieldCodec.ForMessage(18, global::Discovery.Query.Parser);
    private readonly pbc::RepeatedField<global::Discovery.Query> queries_ = new pbc::RepeatedField<global::Discovery.Query>();
    /// <summary>
    /// queries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.Query> Queries {
      get { return queries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Authentication, other.Authentication)) return false;
      if(!queries_.Equals(other.queries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (authentication_ != null) hash ^= Authentication.GetHashCode();
      hash ^= queries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (authentication_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Authentication);
      }
      queries_.WriteTo(output, _repeated_queries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (authentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authentication);
      }
      size += queries_.CalculateSize(_repeated_queries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.authentication_ != null) {
        if (authentication_ == null) {
          authentication_ = new global::Discovery.AuthInfo();
        }
        Authentication.MergeFrom(other.Authentication);
      }
      queries_.Add(other.queries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (authentication_ == null) {
              authentication_ = new global::Discovery.AuthInfo();
            }
            input.ReadMessage(authentication_);
            break;
          }
          case 18: {
            queries_.AddEntriesFrom(input, _repeated_queries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discovery.QueryResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Discovery.QueryResult.Parser);
    private readonly pbc::RepeatedField<global::Discovery.QueryResult> results_ = new pbc::RepeatedField<global::Discovery.QueryResult>();
    /// <summary>
    /// The results are returned in the same order of the queries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.QueryResult> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AuthInfo aggregates authentication information that the server uses
  /// to authenticate the client
  /// </summary>
  public sealed partial class AuthInfo : pb::IMessage<AuthInfo> {
    private static readonly pb::MessageParser<AuthInfo> _parser = new pb::MessageParser<AuthInfo>(() => new AuthInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthInfo(AuthInfo other) : this() {
      clientIdentity_ = other.clientIdentity_;
      clientTlsCertHash_ = other.clientTlsCertHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthInfo Clone() {
      return new AuthInfo(this);
    }

    /// <summary>Field number for the "client_identity" field.</summary>
    public const int ClientIdentityFieldNumber = 1;
    private pb::ByteString clientIdentity_ = pb::ByteString.Empty;
    /// <summary>
    /// This is the identity of the client that is used to verify the signature
    /// on the SignedRequest's payload.
    /// It is a msp.SerializedIdentity in bytes form
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientIdentity {
      get { return clientIdentity_; }
      set {
        clientIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_tls_cert_hash" field.</summary>
    public const int ClientTlsCertHashFieldNumber = 2;
    private pb::ByteString clientTlsCertHash_ = pb::ByteString.Empty;
    /// <summary>
    /// This is the hash of the client's TLS cert.
    /// When the network is running with TLS, clients that don't include a certificate
    /// will be denied access to the service.
    /// Since the Request is encapsulated with a SignedRequest (which is signed),
    /// this binds the TLS session to the enrollement identity of the client and
    /// therefore both authenticates the client to the server,
    /// and also prevents the server from relaying the request message to another server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientTlsCertHash {
      get { return clientTlsCertHash_; }
      set {
        clientTlsCertHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIdentity != other.ClientIdentity) return false;
      if (ClientTlsCertHash != other.ClientTlsCertHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIdentity.Length != 0) hash ^= ClientIdentity.GetHashCode();
      if (ClientTlsCertHash.Length != 0) hash ^= ClientTlsCertHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIdentity.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ClientIdentity);
      }
      if (ClientTlsCertHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientTlsCertHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIdentity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientIdentity);
      }
      if (ClientTlsCertHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientTlsCertHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthInfo other) {
      if (other == null) {
        return;
      }
      if (other.ClientIdentity.Length != 0) {
        ClientIdentity = other.ClientIdentity;
      }
      if (other.ClientTlsCertHash.Length != 0) {
        ClientTlsCertHash = other.ClientTlsCertHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIdentity = input.ReadBytes();
            break;
          }
          case 18: {
            ClientTlsCertHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Query asks for information in the context of a specific channel
  /// </summary>
  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      channel_ = other.channel_;
      switch (other.QueryCase) {
        case QueryOneofCase.ConfigQuery:
          ConfigQuery = other.ConfigQuery.Clone();
          break;
        case QueryOneofCase.PeerQuery:
          PeerQuery = other.PeerQuery.Clone();
          break;
        case QueryOneofCase.CcQuery:
          CcQuery = other.CcQuery.Clone();
          break;
        case QueryOneofCase.LocalPeers:
          LocalPeers = other.LocalPeers.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_query" field.</summary>
    public const int ConfigQueryFieldNumber = 2;
    /// <summary>
    /// ConfigQuery is used to query for the configuration of the channel,
    /// such as FabricMSPConfig, and rorderer endpoints.
    /// The client has to query a peer it trusts as it doesn't have means to self-verify
    /// the authenticity of the returned result.
    /// The result is returned in the form of ConfigResult.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.ConfigQuery ConfigQuery {
      get { return queryCase_ == QueryOneofCase.ConfigQuery ? (global::Discovery.ConfigQuery) query_ : null; }
      set {
        query_ = value;
        queryCase_ = value == null ? QueryOneofCase.None : QueryOneofCase.ConfigQuery;
      }
    }

    /// <summary>Field number for the "peer_query" field.</summary>
    public const int PeerQueryFieldNumber = 3;
    /// <summary>
    /// PeerMembershipQuery queries for peers in a channel context,
    /// and returns PeerMembershipResult
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.PeerMembershipQuery PeerQuery {
      get { return queryCase_ == QueryOneofCase.PeerQuery ? (global::Discovery.PeerMembershipQuery) query_ : null; }
      set {
        query_ = value;
        queryCase_ = value == null ? QueryOneofCase.None : QueryOneofCase.PeerQuery;
      }
    }

    /// <summary>Field number for the "cc_query" field.</summary>
    public const int CcQueryFieldNumber = 4;
    /// <summary>
    /// ChaincodeQuery queries for chaincodes by their name and version.
    /// An empty version means any version can by returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.ChaincodeQuery CcQuery {
      get { return queryCase_ == QueryOneofCase.CcQuery ? (global::Discovery.ChaincodeQuery) query_ : null; }
      set {
        query_ = value;
        queryCase_ = value == null ? QueryOneofCase.None : QueryOneofCase.CcQuery;
      }
    }

    /// <summary>Field number for the "local_peers" field.</summary>
    public const int LocalPeersFieldNumber = 5;
    /// <summary>
    /// LocalPeerQuery queries for peers in a non channel context,
    /// and returns PeerMembershipResult
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.LocalPeerQuery LocalPeers {
      get { return queryCase_ == QueryOneofCase.LocalPeers ? (global::Discovery.LocalPeerQuery) query_ : null; }
      set {
        query_ = value;
        queryCase_ = value == null ? QueryOneofCase.None : QueryOneofCase.LocalPeers;
      }
    }

    private object query_;
    /// <summary>Enum of possible cases for the "query" oneof.</summary>
    public enum QueryOneofCase {
      None = 0,
      ConfigQuery = 2,
      PeerQuery = 3,
      CcQuery = 4,
      LocalPeers = 5,
    }
    private QueryOneofCase queryCase_ = QueryOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOneofCase QueryCase {
      get { return queryCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuery() {
      queryCase_ = QueryOneofCase.None;
      query_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!object.Equals(ConfigQuery, other.ConfigQuery)) return false;
      if (!object.Equals(PeerQuery, other.PeerQuery)) return false;
      if (!object.Equals(CcQuery, other.CcQuery)) return false;
      if (!object.Equals(LocalPeers, other.LocalPeers)) return false;
      if (QueryCase != other.QueryCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (queryCase_ == QueryOneofCase.ConfigQuery) hash ^= ConfigQuery.GetHashCode();
      if (queryCase_ == QueryOneofCase.PeerQuery) hash ^= PeerQuery.GetHashCode();
      if (queryCase_ == QueryOneofCase.CcQuery) hash ^= CcQuery.GetHashCode();
      if (queryCase_ == QueryOneofCase.LocalPeers) hash ^= LocalPeers.GetHashCode();
      hash ^= (int) queryCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (queryCase_ == QueryOneofCase.ConfigQuery) {
        output.WriteRawTag(18);
        output.WriteMessage(ConfigQuery);
      }
      if (queryCase_ == QueryOneofCase.PeerQuery) {
        output.WriteRawTag(26);
        output.WriteMessage(PeerQuery);
      }
      if (queryCase_ == QueryOneofCase.CcQuery) {
        output.WriteRawTag(34);
        output.WriteMessage(CcQuery);
      }
      if (queryCase_ == QueryOneofCase.LocalPeers) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalPeers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (queryCase_ == QueryOneofCase.ConfigQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigQuery);
      }
      if (queryCase_ == QueryOneofCase.PeerQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeerQuery);
      }
      if (queryCase_ == QueryOneofCase.CcQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CcQuery);
      }
      if (queryCase_ == QueryOneofCase.LocalPeers) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalPeers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      switch (other.QueryCase) {
        case QueryOneofCase.ConfigQuery:
          if (ConfigQuery == null) {
            ConfigQuery = new global::Discovery.ConfigQuery();
          }
          ConfigQuery.MergeFrom(other.ConfigQuery);
          break;
        case QueryOneofCase.PeerQuery:
          if (PeerQuery == null) {
            PeerQuery = new global::Discovery.PeerMembershipQuery();
          }
          PeerQuery.MergeFrom(other.PeerQuery);
          break;
        case QueryOneofCase.CcQuery:
          if (CcQuery == null) {
            CcQuery = new global::Discovery.ChaincodeQuery();
          }
          CcQuery.MergeFrom(other.CcQuery);
          break;
        case QueryOneofCase.LocalPeers:
          if (LocalPeers == null) {
            LocalPeers = new global::Discovery.LocalPeerQuery();
          }
          LocalPeers.MergeFrom(other.LocalPeers);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            global::Discovery.ConfigQuery subBuilder = new global::Discovery.ConfigQuery();
            if (queryCase_ == QueryOneofCase.ConfigQuery) {
              subBuilder.MergeFrom(ConfigQuery);
            }
            input.ReadMessage(subBuilder);
            ConfigQuery = subBuilder;
            break;
          }
          case 26: {
            global::Discovery.PeerMembershipQuery subBuilder = new global::Discovery.PeerMembershipQuery();
            if (queryCase_ == QueryOneofCase.PeerQuery) {
              subBuilder.MergeFrom(PeerQuery);
            }
            input.ReadMessage(subBuilder);
            PeerQuery = subBuilder;
            break;
          }
          case 34: {
            global::Discovery.ChaincodeQuery subBuilder = new global::Discovery.ChaincodeQuery();
            if (queryCase_ == QueryOneofCase.CcQuery) {
              subBuilder.MergeFrom(CcQuery);
            }
            input.ReadMessage(subBuilder);
            CcQuery = subBuilder;
            break;
          }
          case 42: {
            global::Discovery.LocalPeerQuery subBuilder = new global::Discovery.LocalPeerQuery();
            if (queryCase_ == QueryOneofCase.LocalPeers) {
              subBuilder.MergeFrom(LocalPeers);
            }
            input.ReadMessage(subBuilder);
            LocalPeers = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// QueryResult contains a result for a given Query.
  /// The corresponding Query can be inferred by the index of the QueryResult from
  /// its enclosing Response message.
  /// QueryResults are ordered in the same order as the Queries are ordered in their enclosing Request.
  /// </summary>
  public sealed partial class QueryResult : pb::IMessage<QueryResult> {
    private static readonly pb::MessageParser<QueryResult> _parser = new pb::MessageParser<QueryResult>(() => new QueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult(QueryResult other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case ResultOneofCase.ConfigResult:
          ConfigResult = other.ConfigResult.Clone();
          break;
        case ResultOneofCase.CcQueryRes:
          CcQueryRes = other.CcQueryRes.Clone();
          break;
        case ResultOneofCase.Members:
          Members = other.Members.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult Clone() {
      return new QueryResult(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    /// <summary>
    /// Error indicates failure or refusal to process the query
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.Error Error {
      get { return resultCase_ == ResultOneofCase.Error ? (global::Discovery.Error) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Error;
      }
    }

    /// <summary>Field number for the "config_result" field.</summary>
    public const int ConfigResultFieldNumber = 2;
    /// <summary>
    /// ConfigResult contains the configuration of the channel,
    /// such as FabricMSPConfig and orderer endpoints
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.ConfigResult ConfigResult {
      get { return resultCase_ == ResultOneofCase.ConfigResult ? (global::Discovery.ConfigResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.ConfigResult;
      }
    }

    /// <summary>Field number for the "cc_query_res" field.</summary>
    public const int CcQueryResFieldNumber = 3;
    /// <summary>
    /// ChaincodeQueryResult contains information about chaincodes,
    /// and their corresponding endorsers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.ChaincodeQueryResult CcQueryRes {
      get { return resultCase_ == ResultOneofCase.CcQueryRes ? (global::Discovery.ChaincodeQueryResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.CcQueryRes;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 4;
    /// <summary>
    /// PeerMembershipResult contains information about peers,
    /// such as their identity, endpoints, and channel related state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.PeerMembershipResult Members {
      get { return resultCase_ == ResultOneofCase.Members ? (global::Discovery.PeerMembershipResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Members;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Error = 1,
      ConfigResult = 2,
      CcQueryRes = 3,
      Members = 4,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(ConfigResult, other.ConfigResult)) return false;
      if (!object.Equals(CcQueryRes, other.CcQueryRes)) return false;
      if (!object.Equals(Members, other.Members)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.Error) hash ^= Error.GetHashCode();
      if (resultCase_ == ResultOneofCase.ConfigResult) hash ^= ConfigResult.GetHashCode();
      if (resultCase_ == ResultOneofCase.CcQueryRes) hash ^= CcQueryRes.GetHashCode();
      if (resultCase_ == ResultOneofCase.Members) hash ^= Members.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (resultCase_ == ResultOneofCase.ConfigResult) {
        output.WriteRawTag(18);
        output.WriteMessage(ConfigResult);
      }
      if (resultCase_ == ResultOneofCase.CcQueryRes) {
        output.WriteRawTag(26);
        output.WriteMessage(CcQueryRes);
      }
      if (resultCase_ == ResultOneofCase.Members) {
        output.WriteRawTag(34);
        output.WriteMessage(Members);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (resultCase_ == ResultOneofCase.ConfigResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigResult);
      }
      if (resultCase_ == ResultOneofCase.CcQueryRes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CcQueryRes);
      }
      if (resultCase_ == ResultOneofCase.Members) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Members);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResult other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Error:
          if (Error == null) {
            Error = new global::Discovery.Error();
          }
          Error.MergeFrom(other.Error);
          break;
        case ResultOneofCase.ConfigResult:
          if (ConfigResult == null) {
            ConfigResult = new global::Discovery.ConfigResult();
          }
          ConfigResult.MergeFrom(other.ConfigResult);
          break;
        case ResultOneofCase.CcQueryRes:
          if (CcQueryRes == null) {
            CcQueryRes = new global::Discovery.ChaincodeQueryResult();
          }
          CcQueryRes.MergeFrom(other.CcQueryRes);
          break;
        case ResultOneofCase.Members:
          if (Members == null) {
            Members = new global::Discovery.PeerMembershipResult();
          }
          Members.MergeFrom(other.Members);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Discovery.Error subBuilder = new global::Discovery.Error();
            if (resultCase_ == ResultOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 18: {
            global::Discovery.ConfigResult subBuilder = new global::Discovery.ConfigResult();
            if (resultCase_ == ResultOneofCase.ConfigResult) {
              subBuilder.MergeFrom(ConfigResult);
            }
            input.ReadMessage(subBuilder);
            ConfigResult = subBuilder;
            break;
          }
          case 26: {
            global::Discovery.ChaincodeQueryResult subBuilder = new global::Discovery.ChaincodeQueryResult();
            if (resultCase_ == ResultOneofCase.CcQueryRes) {
              subBuilder.MergeFrom(CcQueryRes);
            }
            input.ReadMessage(subBuilder);
            CcQueryRes = subBuilder;
            break;
          }
          case 34: {
            global::Discovery.PeerMembershipResult subBuilder = new global::Discovery.PeerMembershipResult();
            if (resultCase_ == ResultOneofCase.Members) {
              subBuilder.MergeFrom(Members);
            }
            input.ReadMessage(subBuilder);
            Members = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ConfigQuery requests a ConfigResult
  /// </summary>
  public sealed partial class ConfigQuery : pb::IMessage<ConfigQuery> {
    private static readonly pb::MessageParser<ConfigQuery> _parser = new pb::MessageParser<ConfigQuery>(() => new ConfigQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigQuery(ConfigQuery other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigQuery Clone() {
      return new ConfigQuery(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigQuery other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ConfigResult : pb::IMessage<ConfigResult> {
    private static readonly pb::MessageParser<ConfigResult> _parser = new pb::MessageParser<ConfigResult>(() => new ConfigResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigResult(ConfigResult other) : this() {
      msps_ = other.msps_.Clone();
      orderers_ = other.orderers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigResult Clone() {
      return new ConfigResult(this);
    }

    /// <summary>Field number for the "msps" field.</summary>
    public const int MspsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Msp.FabricMSPConfig>.Codec _map_msps_codec
        = new pbc::MapField<string, global::Msp.FabricMSPConfig>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Msp.FabricMSPConfig.Parser), 10);
    private readonly pbc::MapField<string, global::Msp.FabricMSPConfig> msps_ = new pbc::MapField<string, global::Msp.FabricMSPConfig>();
    /// <summary>
    /// msps is a map from MSP_ID to FabricMSPConfig
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Msp.FabricMSPConfig> Msps {
      get { return msps_; }
    }

    /// <summary>Field number for the "orderers" field.</summary>
    public const int OrderersFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Discovery.Endpoints>.Codec _map_orderers_codec
        = new pbc::MapField<string, global::Discovery.Endpoints>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Discovery.Endpoints.Parser), 18);
    private readonly pbc::MapField<string, global::Discovery.Endpoints> orderers_ = new pbc::MapField<string, global::Discovery.Endpoints>();
    /// <summary>
    /// orderers is a map from MSP_ID to endpoint lists of orderers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Discovery.Endpoints> Orderers {
      get { return orderers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Msps.Equals(other.Msps)) return false;
      if (!Orderers.Equals(other.Orderers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Msps.GetHashCode();
      hash ^= Orderers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      msps_.WriteTo(output, _map_msps_codec);
      orderers_.WriteTo(output, _map_orderers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += msps_.CalculateSize(_map_msps_codec);
      size += orderers_.CalculateSize(_map_orderers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigResult other) {
      if (other == null) {
        return;
      }
      msps_.Add(other.msps_);
      orderers_.Add(other.orderers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            msps_.AddEntriesFrom(input, _map_msps_codec);
            break;
          }
          case 18: {
            orderers_.AddEntriesFrom(input, _map_orderers_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PeerMembershipQuery requests PeerMembershipResult.
  /// The filter field may be optionally populated in order
  /// for the peer membership to be filtered according to
  /// chaincodes that are installed on peers and collection
  /// access control policies.
  /// </summary>
  public sealed partial class PeerMembershipQuery : pb::IMessage<PeerMembershipQuery> {
    private static readonly pb::MessageParser<PeerMembershipQuery> _parser = new pb::MessageParser<PeerMembershipQuery>(() => new PeerMembershipQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerMembershipQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerMembershipQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerMembershipQuery(PeerMembershipQuery other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerMembershipQuery Clone() {
      return new PeerMembershipQuery(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::Discovery.ChaincodeInterest filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Discovery.ChaincodeInterest Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerMembershipQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerMembershipQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerMembershipQuery other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Discovery.ChaincodeInterest();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              filter_ = new global::Discovery.ChaincodeInterest();
            }
            input.ReadMessage(filter_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PeerMembershipResult contains peers mapped by their organizations (MSP_ID)
  /// </summary>
  public sealed partial class PeerMembershipResult : pb::IMessage<PeerMembershipResult> {
    private static readonly pb::MessageParser<PeerMembershipResult> _parser = new pb::MessageParser<PeerMembershipResult>(() => new PeerMembershipResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerMembershipResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerMembershipResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerMembershipResult(PeerMembershipResult other) : this() {
      peersByOrg_ = other.peersByOrg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerMembershipResult Clone() {
      return new PeerMembershipResult(this);
    }

    /// <summary>Field number for the "peers_by_org" field.</summary>
    public const int PeersByOrgFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Discovery.Peers>.Codec _map_peersByOrg_codec
        = new pbc::MapField<string, global::Discovery.Peers>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Discovery.Peers.Parser), 10);
    private readonly pbc::MapField<string, global::Discovery.Peers> peersByOrg_ = new pbc::MapField<string, global::Discovery.Peers>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Discovery.Peers> PeersByOrg {
      get { return peersByOrg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerMembershipResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerMembershipResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PeersByOrg.Equals(other.PeersByOrg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PeersByOrg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      peersByOrg_.WriteTo(output, _map_peersByOrg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += peersByOrg_.CalculateSize(_map_peersByOrg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerMembershipResult other) {
      if (other == null) {
        return;
      }
      peersByOrg_.Add(other.peersByOrg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            peersByOrg_.AddEntriesFrom(input, _map_peersByOrg_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ChaincodeQuery requests ChaincodeQueryResults for a given
  /// list of chaincode invocations.
  /// Each invocation is a separate one, and the endorsement policy
  /// is evaluated independantly for each given interest.
  /// </summary>
  public sealed partial class ChaincodeQuery : pb::IMessage<ChaincodeQuery> {
    private static readonly pb::MessageParser<ChaincodeQuery> _parser = new pb::MessageParser<ChaincodeQuery>(() => new ChaincodeQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeQuery(ChaincodeQuery other) : this() {
      interests_ = other.interests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeQuery Clone() {
      return new ChaincodeQuery(this);
    }

    /// <summary>Field number for the "interests" field.</summary>
    public const int InterestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discovery.ChaincodeInterest> _repeated_interests_codec
        = pb::FieldCodec.ForMessage(10, global::Discovery.ChaincodeInterest.Parser);
    private readonly pbc::RepeatedField<global::Discovery.ChaincodeInterest> interests_ = new pbc::RepeatedField<global::Discovery.ChaincodeInterest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.ChaincodeInterest> Interests {
      get { return interests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!interests_.Equals(other.interests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= interests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      interests_.WriteTo(output, _repeated_interests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += interests_.CalculateSize(_repeated_interests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeQuery other) {
      if (other == null) {
        return;
      }
      interests_.Add(other.interests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            interests_.AddEntriesFrom(input, _repeated_interests_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ChaincodeInterest defines an interest about an endorsement
  /// for a specific single chaincode invocation.
  /// Multiple chaincodes indicate chaincode to chaincode invocations.
  /// </summary>
  public sealed partial class ChaincodeInterest : pb::IMessage<ChaincodeInterest> {
    private static readonly pb::MessageParser<ChaincodeInterest> _parser = new pb::MessageParser<ChaincodeInterest>(() => new ChaincodeInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInterest(ChaincodeInterest other) : this() {
      chaincodes_ = other.chaincodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeInterest Clone() {
      return new ChaincodeInterest(this);
    }

    /// <summary>Field number for the "chaincodes" field.</summary>
    public const int ChaincodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discovery.ChaincodeCall> _repeated_chaincodes_codec
        = pb::FieldCodec.ForMessage(10, global::Discovery.ChaincodeCall.Parser);
    private readonly pbc::RepeatedField<global::Discovery.ChaincodeCall> chaincodes_ = new pbc::RepeatedField<global::Discovery.ChaincodeCall>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.ChaincodeCall> Chaincodes {
      get { return chaincodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chaincodes_.Equals(other.chaincodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chaincodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chaincodes_.WriteTo(output, _repeated_chaincodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chaincodes_.CalculateSize(_repeated_chaincodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeInterest other) {
      if (other == null) {
        return;
      }
      chaincodes_.Add(other.chaincodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chaincodes_.AddEntriesFrom(input, _repeated_chaincodes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ChaincodeCall defines a call to a chaincode.
  /// It may have collections that are related to the chaincode
  /// </summary>
  public sealed partial class ChaincodeCall : pb::IMessage<ChaincodeCall> {
    private static readonly pb::MessageParser<ChaincodeCall> _parser = new pb::MessageParser<ChaincodeCall>(() => new ChaincodeCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeCall(ChaincodeCall other) : this() {
      name_ = other.name_;
      collectionNames_ = other.collectionNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeCall Clone() {
      return new ChaincodeCall(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection_names" field.</summary>
    public const int CollectionNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_collectionNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> collectionNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CollectionNames {
      get { return collectionNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!collectionNames_.Equals(other.collectionNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= collectionNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      collectionNames_.WriteTo(output, _repeated_collectionNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += collectionNames_.CalculateSize(_repeated_collectionNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeCall other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      collectionNames_.Add(other.collectionNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            collectionNames_.AddEntriesFrom(input, _repeated_collectionNames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ChaincodeQueryResult contains EndorsementDescriptors for
  /// chaincodes
  /// </summary>
  public sealed partial class ChaincodeQueryResult : pb::IMessage<ChaincodeQueryResult> {
    private static readonly pb::MessageParser<ChaincodeQueryResult> _parser = new pb::MessageParser<ChaincodeQueryResult>(() => new ChaincodeQueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChaincodeQueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeQueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeQueryResult(ChaincodeQueryResult other) : this() {
      content_ = other.content_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChaincodeQueryResult Clone() {
      return new ChaincodeQueryResult(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discovery.EndorsementDescriptor> _repeated_content_codec
        = pb::FieldCodec.ForMessage(10, global::Discovery.EndorsementDescriptor.Parser);
    private readonly pbc::RepeatedField<global::Discovery.EndorsementDescriptor> content_ = new pbc::RepeatedField<global::Discovery.EndorsementDescriptor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.EndorsementDescriptor> Content {
      get { return content_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChaincodeQueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChaincodeQueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!content_.Equals(other.content_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= content_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      content_.WriteTo(output, _repeated_content_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += content_.CalculateSize(_repeated_content_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChaincodeQueryResult other) {
      if (other == null) {
        return;
      }
      content_.Add(other.content_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            content_.AddEntriesFrom(input, _repeated_content_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// LocalPeerQuery queries for peers in a non channel context
  /// </summary>
  public sealed partial class LocalPeerQuery : pb::IMessage<LocalPeerQuery> {
    private static readonly pb::MessageParser<LocalPeerQuery> _parser = new pb::MessageParser<LocalPeerQuery>(() => new LocalPeerQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocalPeerQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalPeerQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalPeerQuery(LocalPeerQuery other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalPeerQuery Clone() {
      return new LocalPeerQuery(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocalPeerQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocalPeerQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocalPeerQuery other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// EndorsementDescriptor contains information about which peers can be used
  /// to request endorsement from, such that the endorsement policy would be fulfilled.
  /// Here is how to compute a set of peers to ask an endorsement from, given an EndorsementDescriptor:
  /// Let e: G --> P be the endorsers_by_groups field that maps a group to a set of peers.
  /// Note that applying e on a group g yields a set of peers.
  /// 1) Select a layout l: G --> N out of the layouts given.
  ///    l is the quantities_by_group field of a Layout, and it maps a group to an integer.
  /// 2) R = {}  (an empty set of peers)
  /// 3) For each group g in the layout l, compute n = l(g)
  ///    3.1) Denote P_g as a set of n random peers {p0, p1, ... p_n} selected from e(g)
  ///    3.2) R = R U P_g  (add P_g to R)
  /// 4) The set of peers R is the peers the client needs to request endorsements from
  /// </summary>
  public sealed partial class EndorsementDescriptor : pb::IMessage<EndorsementDescriptor> {
    private static readonly pb::MessageParser<EndorsementDescriptor> _parser = new pb::MessageParser<EndorsementDescriptor>(() => new EndorsementDescriptor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndorsementDescriptor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndorsementDescriptor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndorsementDescriptor(EndorsementDescriptor other) : this() {
      chaincode_ = other.chaincode_;
      endorsersByGroups_ = other.endorsersByGroups_.Clone();
      layouts_ = other.layouts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndorsementDescriptor Clone() {
      return new EndorsementDescriptor(this);
    }

    /// <summary>Field number for the "chaincode" field.</summary>
    public const int ChaincodeFieldNumber = 1;
    private string chaincode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chaincode {
      get { return chaincode_; }
      set {
        chaincode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endorsers_by_groups" field.</summary>
    public const int EndorsersByGroupsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Discovery.Peers>.Codec _map_endorsersByGroups_codec
        = new pbc::MapField<string, global::Discovery.Peers>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Discovery.Peers.Parser), 18);
    private readonly pbc::MapField<string, global::Discovery.Peers> endorsersByGroups_ = new pbc::MapField<string, global::Discovery.Peers>();
    /// <summary>
    /// Specifies the endorsers, separated to groups.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Discovery.Peers> EndorsersByGroups {
      get { return endorsersByGroups_; }
    }

    /// <summary>Field number for the "layouts" field.</summary>
    public const int LayoutsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Discovery.Layout> _repeated_layouts_codec
        = pb::FieldCodec.ForMessage(26, global::Discovery.Layout.Parser);
    private readonly pbc::RepeatedField<global::Discovery.Layout> layouts_ = new pbc::RepeatedField<global::Discovery.Layout>();
    /// <summary>
    /// Specifies options of fulfulling the endorsement policy.
    /// Each option lists the group names, and the amount of signatures needed
    /// from each group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.Layout> Layouts {
      get { return layouts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndorsementDescriptor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndorsementDescriptor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chaincode != other.Chaincode) return false;
      if (!EndorsersByGroups.Equals(other.EndorsersByGroups)) return false;
      if(!layouts_.Equals(other.layouts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Chaincode.Length != 0) hash ^= Chaincode.GetHashCode();
      hash ^= EndorsersByGroups.GetHashCode();
      hash ^= layouts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Chaincode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Chaincode);
      }
      endorsersByGroups_.WriteTo(output, _map_endorsersByGroups_codec);
      layouts_.WriteTo(output, _repeated_layouts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Chaincode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chaincode);
      }
      size += endorsersByGroups_.CalculateSize(_map_endorsersByGroups_codec);
      size += layouts_.CalculateSize(_repeated_layouts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndorsementDescriptor other) {
      if (other == null) {
        return;
      }
      if (other.Chaincode.Length != 0) {
        Chaincode = other.Chaincode;
      }
      endorsersByGroups_.Add(other.endorsersByGroups_);
      layouts_.Add(other.layouts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Chaincode = input.ReadString();
            break;
          }
          case 18: {
            endorsersByGroups_.AddEntriesFrom(input, _map_endorsersByGroups_codec);
            break;
          }
          case 26: {
            layouts_.AddEntriesFrom(input, _repeated_layouts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Layout contains a mapping from a group name to number of peers
  /// that are needed for fulfilling an endorsement policy
  /// </summary>
  public sealed partial class Layout : pb::IMessage<Layout> {
    private static readonly pb::MessageParser<Layout> _parser = new pb::MessageParser<Layout>(() => new Layout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Layout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout(Layout other) : this() {
      quantitiesByGroup_ = other.quantitiesByGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout Clone() {
      return new Layout(this);
    }

    /// <summary>Field number for the "quantities_by_group" field.</summary>
    public const int QuantitiesByGroupFieldNumber = 1;
    private static readonly pbc::MapField<string, uint>.Codec _map_quantitiesByGroup_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForUInt32(16), 10);
    private readonly pbc::MapField<string, uint> quantitiesByGroup_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// Specifies how many non repeated signatures of each group
    /// are needed for endorsement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, uint> QuantitiesByGroup {
      get { return quantitiesByGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Layout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Layout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!QuantitiesByGroup.Equals(other.QuantitiesByGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= QuantitiesByGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      quantitiesByGroup_.WriteTo(output, _map_quantitiesByGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += quantitiesByGroup_.CalculateSize(_map_quantitiesByGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Layout other) {
      if (other == null) {
        return;
      }
      quantitiesByGroup_.Add(other.quantitiesByGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            quantitiesByGroup_.AddEntriesFrom(input, _map_quantitiesByGroup_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Peers contains a list of Peer(s)
  /// </summary>
  public sealed partial class Peers : pb::IMessage<Peers> {
    private static readonly pb::MessageParser<Peers> _parser = new pb::MessageParser<Peers>(() => new Peers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Peers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peers(Peers other) : this() {
      peers_ = other.peers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peers Clone() {
      return new Peers(this);
    }

    /// <summary>Field number for the "peers" field.</summary>
    public const int Peers_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discovery.Peer> _repeated_peers_codec
        = pb::FieldCodec.ForMessage(10, global::Discovery.Peer.Parser);
    private readonly pbc::RepeatedField<global::Discovery.Peer> peers_ = new pbc::RepeatedField<global::Discovery.Peer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.Peer> Peers_ {
      get { return peers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Peers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Peers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!peers_.Equals(other.peers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= peers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      peers_.WriteTo(output, _repeated_peers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += peers_.CalculateSize(_repeated_peers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Peers other) {
      if (other == null) {
        return;
      }
      peers_.Add(other.peers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            peers_.AddEntriesFrom(input, _repeated_peers_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Peer contains information about the peer such as its channel specific
  /// state, and membership information.
  /// </summary>
  public sealed partial class Peer : pb::IMessage<Peer> {
    private static readonly pb::MessageParser<Peer> _parser = new pb::MessageParser<Peer>(() => new Peer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Peer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peer(Peer other) : this() {
      stateInfo_ = other.stateInfo_ != null ? other.stateInfo_.Clone() : null;
      membershipInfo_ = other.membershipInfo_ != null ? other.membershipInfo_.Clone() : null;
      identity_ = other.identity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peer Clone() {
      return new Peer(this);
    }

    /// <summary>Field number for the "state_info" field.</summary>
    public const int StateInfoFieldNumber = 1;
    private global::Gossip.Envelope stateInfo_;
    /// <summary>
    /// This is an Envelope of a GossipMessage with a gossip.StateInfo message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gossip.Envelope StateInfo {
      get { return stateInfo_; }
      set {
        stateInfo_ = value;
      }
    }

    /// <summary>Field number for the "membership_info" field.</summary>
    public const int MembershipInfoFieldNumber = 2;
    private global::Gossip.Envelope membershipInfo_;
    /// <summary>
    /// This is an Envelope of a GossipMessage with a gossip.AliveMessage message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gossip.Envelope MembershipInfo {
      get { return membershipInfo_; }
      set {
        membershipInfo_ = value;
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 3;
    private pb::ByteString identity_ = pb::ByteString.Empty;
    /// <summary>
    /// This is the msp.SerializedIdentity of the peer, represented in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Peer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Peer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StateInfo, other.StateInfo)) return false;
      if (!object.Equals(MembershipInfo, other.MembershipInfo)) return false;
      if (Identity != other.Identity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stateInfo_ != null) hash ^= StateInfo.GetHashCode();
      if (membershipInfo_ != null) hash ^= MembershipInfo.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stateInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StateInfo);
      }
      if (membershipInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MembershipInfo);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Identity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stateInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateInfo);
      }
      if (membershipInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MembershipInfo);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Identity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Peer other) {
      if (other == null) {
        return;
      }
      if (other.stateInfo_ != null) {
        if (stateInfo_ == null) {
          stateInfo_ = new global::Gossip.Envelope();
        }
        StateInfo.MergeFrom(other.StateInfo);
      }
      if (other.membershipInfo_ != null) {
        if (membershipInfo_ == null) {
          membershipInfo_ = new global::Gossip.Envelope();
        }
        MembershipInfo.MergeFrom(other.MembershipInfo);
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stateInfo_ == null) {
              stateInfo_ = new global::Gossip.Envelope();
            }
            input.ReadMessage(stateInfo_);
            break;
          }
          case 18: {
            if (membershipInfo_ == null) {
              membershipInfo_ = new global::Gossip.Envelope();
            }
            input.ReadMessage(membershipInfo_);
            break;
          }
          case 26: {
            Identity = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Error denotes that something went wrong and contains the error message
  /// </summary>
  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Endpoints is a list of Endpoint(s)
  /// </summary>
  public sealed partial class Endpoints : pb::IMessage<Endpoints> {
    private static readonly pb::MessageParser<Endpoints> _parser = new pb::MessageParser<Endpoints>(() => new Endpoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Endpoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoints(Endpoints other) : this() {
      endpoint_ = other.endpoint_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoints Clone() {
      return new Endpoints(this);
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discovery.Endpoint> _repeated_endpoint_codec
        = pb::FieldCodec.ForMessage(10, global::Discovery.Endpoint.Parser);
    private readonly pbc::RepeatedField<global::Discovery.Endpoint> endpoint_ = new pbc::RepeatedField<global::Discovery.Endpoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Discovery.Endpoint> Endpoint {
      get { return endpoint_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Endpoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Endpoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endpoint_.Equals(other.endpoint_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endpoint_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      endpoint_.WriteTo(output, _repeated_endpoint_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endpoint_.CalculateSize(_repeated_endpoint_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Endpoints other) {
      if (other == null) {
        return;
      }
      endpoint_.Add(other.endpoint_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endpoint_.AddEntriesFrom(input, _repeated_endpoint_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Endpoint is a combination of a host and a port
  /// </summary>
  public sealed partial class Endpoint : pb::IMessage<Endpoint> {
    private static readonly pb::MessageParser<Endpoint> _parser = new pb::MessageParser<Endpoint>(() => new Endpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Endpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discovery.ProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint(Endpoint other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint Clone() {
      return new Endpoint(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Endpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Endpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Endpoint other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
