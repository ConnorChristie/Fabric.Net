// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ledger/rwset/rwset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rwset {

  /// <summary>Holder for reflection information generated from ledger/rwset/rwset.proto</summary>
  public static partial class RwsetReflection {

    #region Descriptor
    /// <summary>File descriptor for ledger/rwset/rwset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RwsetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhsZWRnZXIvcndzZXQvcndzZXQucHJvdG8SBXJ3c2V0IoMBCg5UeFJlYWRX",
            "cml0ZVNldBIzCgpkYXRhX21vZGVsGAEgASgOMh8ucndzZXQuVHhSZWFkV3Jp",
            "dGVTZXQuRGF0YU1vZGVsEicKCG5zX3J3c2V0GAIgAygLMhUucndzZXQuTnNS",
            "ZWFkV3JpdGVTZXQiEwoJRGF0YU1vZGVsEgYKAktWEAAieAoOTnNSZWFkV3Jp",
            "dGVTZXQSEQoJbmFtZXNwYWNlGAEgASgJEg0KBXJ3c2V0GAIgASgMEkQKF2Nv",
            "bGxlY3Rpb25faGFzaGVkX3J3c2V0GAMgAygLMiMucndzZXQuQ29sbGVjdGlv",
            "bkhhc2hlZFJlYWRXcml0ZVNldCJlChxDb2xsZWN0aW9uSGFzaGVkUmVhZFdy",
            "aXRlU2V0EhcKD2NvbGxlY3Rpb25fbmFtZRgBIAEoCRIUCgxoYXNoZWRfcndz",
            "ZXQYAiABKAwSFgoOcHZ0X3J3c2V0X2hhc2gYAyABKAwieAoRVHhQdnRSZWFk",
            "V3JpdGVTZXQSMwoKZGF0YV9tb2RlbBgBIAEoDjIfLnJ3c2V0LlR4UmVhZFdy",
            "aXRlU2V0LkRhdGFNb2RlbBIuCgxuc19wdnRfcndzZXQYAiADKAsyGC5yd3Nl",
            "dC5Oc1B2dFJlYWRXcml0ZVNldCJmChFOc1B2dFJlYWRXcml0ZVNldBIRCglu",
            "YW1lc3BhY2UYASABKAkSPgoUY29sbGVjdGlvbl9wdnRfcndzZXQYAiADKAsy",
            "IC5yd3NldC5Db2xsZWN0aW9uUHZ0UmVhZFdyaXRlU2V0IkMKGUNvbGxlY3Rp",
            "b25QdnRSZWFkV3JpdGVTZXQSFwoPY29sbGVjdGlvbl9uYW1lGAEgASgJEg0K",
            "BXJ3c2V0GAIgASgMQl8KKm9yZy5oeXBlcmxlZGdlci5mYWJyaWMucHJvdG9z",
            "LmxlZGdlci5yd3NldFoxZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMv",
            "cHJvdG9zL2xlZGdlci9yd3NldGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rwset.TxReadWriteSet), global::Rwset.TxReadWriteSet.Parser, new[]{ "DataModel", "NsRwset" }, null, new[]{ typeof(global::Rwset.TxReadWriteSet.Types.DataModel) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rwset.NsReadWriteSet), global::Rwset.NsReadWriteSet.Parser, new[]{ "Namespace", "Rwset", "CollectionHashedRwset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rwset.CollectionHashedReadWriteSet), global::Rwset.CollectionHashedReadWriteSet.Parser, new[]{ "CollectionName", "HashedRwset", "PvtRwsetHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rwset.TxPvtReadWriteSet), global::Rwset.TxPvtReadWriteSet.Parser, new[]{ "DataModel", "NsPvtRwset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rwset.NsPvtReadWriteSet), global::Rwset.NsPvtReadWriteSet.Parser, new[]{ "Namespace", "CollectionPvtRwset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rwset.CollectionPvtReadWriteSet), global::Rwset.CollectionPvtReadWriteSet.Parser, new[]{ "CollectionName", "Rwset" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// TxReadWriteSet encapsulates a read-write set for a transaction
  /// DataModel specifies the enum value of the data model
  /// ns_rwset field specifies a list of chaincode specific read-write set (one for each chaincode)
  /// </summary>
  public sealed partial class TxReadWriteSet : pb::IMessage<TxReadWriteSet> {
    private static readonly pb::MessageParser<TxReadWriteSet> _parser = new pb::MessageParser<TxReadWriteSet>(() => new TxReadWriteSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxReadWriteSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rwset.RwsetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxReadWriteSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxReadWriteSet(TxReadWriteSet other) : this() {
      dataModel_ = other.dataModel_;
      nsRwset_ = other.nsRwset_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxReadWriteSet Clone() {
      return new TxReadWriteSet(this);
    }

    /// <summary>Field number for the "data_model" field.</summary>
    public const int DataModelFieldNumber = 1;
    private global::Rwset.TxReadWriteSet.Types.DataModel dataModel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rwset.TxReadWriteSet.Types.DataModel DataModel {
      get { return dataModel_; }
      set {
        dataModel_ = value;
      }
    }

    /// <summary>Field number for the "ns_rwset" field.</summary>
    public const int NsRwsetFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rwset.NsReadWriteSet> _repeated_nsRwset_codec
        = pb::FieldCodec.ForMessage(18, global::Rwset.NsReadWriteSet.Parser);
    private readonly pbc::RepeatedField<global::Rwset.NsReadWriteSet> nsRwset_ = new pbc::RepeatedField<global::Rwset.NsReadWriteSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rwset.NsReadWriteSet> NsRwset {
      get { return nsRwset_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxReadWriteSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxReadWriteSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataModel != other.DataModel) return false;
      if(!nsRwset_.Equals(other.nsRwset_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataModel != 0) hash ^= DataModel.GetHashCode();
      hash ^= nsRwset_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataModel != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataModel);
      }
      nsRwset_.WriteTo(output, _repeated_nsRwset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataModel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataModel);
      }
      size += nsRwset_.CalculateSize(_repeated_nsRwset_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxReadWriteSet other) {
      if (other == null) {
        return;
      }
      if (other.DataModel != 0) {
        DataModel = other.DataModel;
      }
      nsRwset_.Add(other.nsRwset_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            dataModel_ = (global::Rwset.TxReadWriteSet.Types.DataModel) input.ReadEnum();
            break;
          }
          case 18: {
            nsRwset_.AddEntriesFrom(input, _repeated_nsRwset_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TxReadWriteSet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum DataModel {
        [pbr::OriginalName("KV")] Kv = 0,
      }

    }
    #endregion

  }

  /// <summary>
  /// NsReadWriteSet encapsulates the read-write set for a chaincode
  /// </summary>
  public sealed partial class NsReadWriteSet : pb::IMessage<NsReadWriteSet> {
    private static readonly pb::MessageParser<NsReadWriteSet> _parser = new pb::MessageParser<NsReadWriteSet>(() => new NsReadWriteSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NsReadWriteSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rwset.RwsetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NsReadWriteSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NsReadWriteSet(NsReadWriteSet other) : this() {
      namespace_ = other.namespace_;
      rwset_ = other.rwset_;
      collectionHashedRwset_ = other.collectionHashedRwset_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NsReadWriteSet Clone() {
      return new NsReadWriteSet(this);
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 1;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rwset" field.</summary>
    public const int RwsetFieldNumber = 2;
    private pb::ByteString rwset_ = pb::ByteString.Empty;
    /// <summary>
    /// Data model specific serialized proto message (e.g., kvrwset.KVRWSet for KV and Document data models)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Rwset {
      get { return rwset_; }
      set {
        rwset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection_hashed_rwset" field.</summary>
    public const int CollectionHashedRwsetFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Rwset.CollectionHashedReadWriteSet> _repeated_collectionHashedRwset_codec
        = pb::FieldCodec.ForMessage(26, global::Rwset.CollectionHashedReadWriteSet.Parser);
    private readonly pbc::RepeatedField<global::Rwset.CollectionHashedReadWriteSet> collectionHashedRwset_ = new pbc::RepeatedField<global::Rwset.CollectionHashedReadWriteSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rwset.CollectionHashedReadWriteSet> CollectionHashedRwset {
      get { return collectionHashedRwset_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NsReadWriteSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NsReadWriteSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Namespace != other.Namespace) return false;
      if (Rwset != other.Rwset) return false;
      if(!collectionHashedRwset_.Equals(other.collectionHashedRwset_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (Rwset.Length != 0) hash ^= Rwset.GetHashCode();
      hash ^= collectionHashedRwset_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Namespace.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Namespace);
      }
      if (Rwset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Rwset);
      }
      collectionHashedRwset_.WriteTo(output, _repeated_collectionHashedRwset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (Rwset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Rwset);
      }
      size += collectionHashedRwset_.CalculateSize(_repeated_collectionHashedRwset_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NsReadWriteSet other) {
      if (other == null) {
        return;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.Rwset.Length != 0) {
        Rwset = other.Rwset;
      }
      collectionHashedRwset_.Add(other.collectionHashedRwset_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Namespace = input.ReadString();
            break;
          }
          case 18: {
            Rwset = input.ReadBytes();
            break;
          }
          case 26: {
            collectionHashedRwset_.AddEntriesFrom(input, _repeated_collectionHashedRwset_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CollectionHashedReadWriteSet encapsulate the hashed representation for the private read-write set for a collection
  /// </summary>
  public sealed partial class CollectionHashedReadWriteSet : pb::IMessage<CollectionHashedReadWriteSet> {
    private static readonly pb::MessageParser<CollectionHashedReadWriteSet> _parser = new pb::MessageParser<CollectionHashedReadWriteSet>(() => new CollectionHashedReadWriteSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionHashedReadWriteSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rwset.RwsetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionHashedReadWriteSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionHashedReadWriteSet(CollectionHashedReadWriteSet other) : this() {
      collectionName_ = other.collectionName_;
      hashedRwset_ = other.hashedRwset_;
      pvtRwsetHash_ = other.pvtRwsetHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionHashedReadWriteSet Clone() {
      return new CollectionHashedReadWriteSet(this);
    }

    /// <summary>Field number for the "collection_name" field.</summary>
    public const int CollectionNameFieldNumber = 1;
    private string collectionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CollectionName {
      get { return collectionName_; }
      set {
        collectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hashed_rwset" field.</summary>
    public const int HashedRwsetFieldNumber = 2;
    private pb::ByteString hashedRwset_ = pb::ByteString.Empty;
    /// <summary>
    /// Data model specific serialized proto message (e.g., kvrwset.HashedRWSet for KV and Document data models)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HashedRwset {
      get { return hashedRwset_; }
      set {
        hashedRwset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pvt_rwset_hash" field.</summary>
    public const int PvtRwsetHashFieldNumber = 3;
    private pb::ByteString pvtRwsetHash_ = pb::ByteString.Empty;
    /// <summary>
    /// Hash of entire private read-write set for a specific collection. This helps in authenticating the private read-write set efficiently
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PvtRwsetHash {
      get { return pvtRwsetHash_; }
      set {
        pvtRwsetHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionHashedReadWriteSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionHashedReadWriteSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CollectionName != other.CollectionName) return false;
      if (HashedRwset != other.HashedRwset) return false;
      if (PvtRwsetHash != other.PvtRwsetHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CollectionName.Length != 0) hash ^= CollectionName.GetHashCode();
      if (HashedRwset.Length != 0) hash ^= HashedRwset.GetHashCode();
      if (PvtRwsetHash.Length != 0) hash ^= PvtRwsetHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CollectionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CollectionName);
      }
      if (HashedRwset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(HashedRwset);
      }
      if (PvtRwsetHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(PvtRwsetHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CollectionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectionName);
      }
      if (HashedRwset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HashedRwset);
      }
      if (PvtRwsetHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PvtRwsetHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionHashedReadWriteSet other) {
      if (other == null) {
        return;
      }
      if (other.CollectionName.Length != 0) {
        CollectionName = other.CollectionName;
      }
      if (other.HashedRwset.Length != 0) {
        HashedRwset = other.HashedRwset;
      }
      if (other.PvtRwsetHash.Length != 0) {
        PvtRwsetHash = other.PvtRwsetHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CollectionName = input.ReadString();
            break;
          }
          case 18: {
            HashedRwset = input.ReadBytes();
            break;
          }
          case 26: {
            PvtRwsetHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TxPvtReadWriteSet encapsulate the private read-write set for a transaction
  /// </summary>
  public sealed partial class TxPvtReadWriteSet : pb::IMessage<TxPvtReadWriteSet> {
    private static readonly pb::MessageParser<TxPvtReadWriteSet> _parser = new pb::MessageParser<TxPvtReadWriteSet>(() => new TxPvtReadWriteSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxPvtReadWriteSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rwset.RwsetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxPvtReadWriteSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxPvtReadWriteSet(TxPvtReadWriteSet other) : this() {
      dataModel_ = other.dataModel_;
      nsPvtRwset_ = other.nsPvtRwset_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxPvtReadWriteSet Clone() {
      return new TxPvtReadWriteSet(this);
    }

    /// <summary>Field number for the "data_model" field.</summary>
    public const int DataModelFieldNumber = 1;
    private global::Rwset.TxReadWriteSet.Types.DataModel dataModel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rwset.TxReadWriteSet.Types.DataModel DataModel {
      get { return dataModel_; }
      set {
        dataModel_ = value;
      }
    }

    /// <summary>Field number for the "ns_pvt_rwset" field.</summary>
    public const int NsPvtRwsetFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rwset.NsPvtReadWriteSet> _repeated_nsPvtRwset_codec
        = pb::FieldCodec.ForMessage(18, global::Rwset.NsPvtReadWriteSet.Parser);
    private readonly pbc::RepeatedField<global::Rwset.NsPvtReadWriteSet> nsPvtRwset_ = new pbc::RepeatedField<global::Rwset.NsPvtReadWriteSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rwset.NsPvtReadWriteSet> NsPvtRwset {
      get { return nsPvtRwset_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxPvtReadWriteSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxPvtReadWriteSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataModel != other.DataModel) return false;
      if(!nsPvtRwset_.Equals(other.nsPvtRwset_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataModel != 0) hash ^= DataModel.GetHashCode();
      hash ^= nsPvtRwset_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataModel != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataModel);
      }
      nsPvtRwset_.WriteTo(output, _repeated_nsPvtRwset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataModel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataModel);
      }
      size += nsPvtRwset_.CalculateSize(_repeated_nsPvtRwset_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxPvtReadWriteSet other) {
      if (other == null) {
        return;
      }
      if (other.DataModel != 0) {
        DataModel = other.DataModel;
      }
      nsPvtRwset_.Add(other.nsPvtRwset_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            dataModel_ = (global::Rwset.TxReadWriteSet.Types.DataModel) input.ReadEnum();
            break;
          }
          case 18: {
            nsPvtRwset_.AddEntriesFrom(input, _repeated_nsPvtRwset_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NsPvtReadWriteSet encapsulates the private read-write set for a chaincode
  /// </summary>
  public sealed partial class NsPvtReadWriteSet : pb::IMessage<NsPvtReadWriteSet> {
    private static readonly pb::MessageParser<NsPvtReadWriteSet> _parser = new pb::MessageParser<NsPvtReadWriteSet>(() => new NsPvtReadWriteSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NsPvtReadWriteSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rwset.RwsetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NsPvtReadWriteSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NsPvtReadWriteSet(NsPvtReadWriteSet other) : this() {
      namespace_ = other.namespace_;
      collectionPvtRwset_ = other.collectionPvtRwset_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NsPvtReadWriteSet Clone() {
      return new NsPvtReadWriteSet(this);
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 1;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection_pvt_rwset" field.</summary>
    public const int CollectionPvtRwsetFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rwset.CollectionPvtReadWriteSet> _repeated_collectionPvtRwset_codec
        = pb::FieldCodec.ForMessage(18, global::Rwset.CollectionPvtReadWriteSet.Parser);
    private readonly pbc::RepeatedField<global::Rwset.CollectionPvtReadWriteSet> collectionPvtRwset_ = new pbc::RepeatedField<global::Rwset.CollectionPvtReadWriteSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rwset.CollectionPvtReadWriteSet> CollectionPvtRwset {
      get { return collectionPvtRwset_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NsPvtReadWriteSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NsPvtReadWriteSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Namespace != other.Namespace) return false;
      if(!collectionPvtRwset_.Equals(other.collectionPvtRwset_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      hash ^= collectionPvtRwset_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Namespace.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Namespace);
      }
      collectionPvtRwset_.WriteTo(output, _repeated_collectionPvtRwset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      size += collectionPvtRwset_.CalculateSize(_repeated_collectionPvtRwset_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NsPvtReadWriteSet other) {
      if (other == null) {
        return;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      collectionPvtRwset_.Add(other.collectionPvtRwset_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Namespace = input.ReadString();
            break;
          }
          case 18: {
            collectionPvtRwset_.AddEntriesFrom(input, _repeated_collectionPvtRwset_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CollectionPvtReadWriteSet encapsulates the private read-write set for a collection
  /// </summary>
  public sealed partial class CollectionPvtReadWriteSet : pb::IMessage<CollectionPvtReadWriteSet> {
    private static readonly pb::MessageParser<CollectionPvtReadWriteSet> _parser = new pb::MessageParser<CollectionPvtReadWriteSet>(() => new CollectionPvtReadWriteSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionPvtReadWriteSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rwset.RwsetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPvtReadWriteSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPvtReadWriteSet(CollectionPvtReadWriteSet other) : this() {
      collectionName_ = other.collectionName_;
      rwset_ = other.rwset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPvtReadWriteSet Clone() {
      return new CollectionPvtReadWriteSet(this);
    }

    /// <summary>Field number for the "collection_name" field.</summary>
    public const int CollectionNameFieldNumber = 1;
    private string collectionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CollectionName {
      get { return collectionName_; }
      set {
        collectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rwset" field.</summary>
    public const int RwsetFieldNumber = 2;
    private pb::ByteString rwset_ = pb::ByteString.Empty;
    /// <summary>
    /// Data model specific serialized proto message (e.g., kvrwset.KVRWSet for KV and Document data models)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Rwset {
      get { return rwset_; }
      set {
        rwset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionPvtReadWriteSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionPvtReadWriteSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CollectionName != other.CollectionName) return false;
      if (Rwset != other.Rwset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CollectionName.Length != 0) hash ^= CollectionName.GetHashCode();
      if (Rwset.Length != 0) hash ^= Rwset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CollectionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CollectionName);
      }
      if (Rwset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Rwset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CollectionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectionName);
      }
      if (Rwset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Rwset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionPvtReadWriteSet other) {
      if (other == null) {
        return;
      }
      if (other.CollectionName.Length != 0) {
        CollectionName = other.CollectionName;
      }
      if (other.Rwset.Length != 0) {
        Rwset = other.Rwset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CollectionName = input.ReadString();
            break;
          }
          case 18: {
            Rwset = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
