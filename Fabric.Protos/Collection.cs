// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/collection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from common/collection.proto</summary>
  public static partial class CollectionReflection {

    #region Descriptor
    /// <summary>File descriptor for common/collection.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CollectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdjb21tb24vY29sbGVjdGlvbi5wcm90bxIGY29tbW9uGhVjb21tb24vcG9s",
            "aWNpZXMucHJvdG8iQwoXQ29sbGVjdGlvbkNvbmZpZ1BhY2thZ2USKAoGY29u",
            "ZmlnGAEgAygLMhguY29tbW9uLkNvbGxlY3Rpb25Db25maWciYQoQQ29sbGVj",
            "dGlvbkNvbmZpZxJCChhzdGF0aWNfY29sbGVjdGlvbl9jb25maWcYASABKAsy",
            "Hi5jb21tb24uU3RhdGljQ29sbGVjdGlvbkNvbmZpZ0gAQgkKB3BheWxvYWQi",
            "sgEKFlN0YXRpY0NvbGxlY3Rpb25Db25maWcSDAoEbmFtZRgBIAEoCRI6ChJt",
            "ZW1iZXJfb3Jnc19wb2xpY3kYAiABKAsyHi5jb21tb24uQ29sbGVjdGlvblBv",
            "bGljeUNvbmZpZxIbChNyZXF1aXJlZF9wZWVyX2NvdW50GAMgASgFEhoKEm1h",
            "eGltdW1fcGVlcl9jb3VudBgEIAEoBRIVCg1ibG9ja190b19saXZlGAUgASgE",
            "ImAKFkNvbGxlY3Rpb25Qb2xpY3lDb25maWcSOwoQc2lnbmF0dXJlX3BvbGlj",
            "eRgBIAEoCzIfLmNvbW1vbi5TaWduYXR1cmVQb2xpY3lFbnZlbG9wZUgAQgkK",
            "B3BheWxvYWQiWwoSQ29sbGVjdGlvbkNyaXRlcmlhEg8KB2NoYW5uZWwYASAB",
            "KAkSDQoFdHhfaWQYAiABKAkSEgoKY29sbGVjdGlvbhgDIAEoCRIRCgluYW1l",
            "c3BhY2UYBCABKAlCUwokb3JnLmh5cGVybGVkZ2VyLmZhYnJpYy5wcm90b3Mu",
            "Y29tbW9uWitnaXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy9wcm90b3Mv",
            "Y29tbW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.PoliciesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.CollectionConfigPackage), global::Common.CollectionConfigPackage.Parser, new[]{ "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.CollectionConfig), global::Common.CollectionConfig.Parser, new[]{ "StaticCollectionConfig" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.StaticCollectionConfig), global::Common.StaticCollectionConfig.Parser, new[]{ "Name", "MemberOrgsPolicy", "RequiredPeerCount", "MaximumPeerCount", "BlockToLive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.CollectionPolicyConfig), global::Common.CollectionPolicyConfig.Parser, new[]{ "SignaturePolicy" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.CollectionCriteria), global::Common.CollectionCriteria.Parser, new[]{ "Channel", "TxId", "Collection", "Namespace" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// CollectionConfigPackage represents an array of CollectionConfig
  /// messages; the extra struct is required because repeated oneof is
  /// forbidden by the protobuf syntax
  /// </summary>
  public sealed partial class CollectionConfigPackage : pb::IMessage<CollectionConfigPackage> {
    private static readonly pb::MessageParser<CollectionConfigPackage> _parser = new pb::MessageParser<CollectionConfigPackage>(() => new CollectionConfigPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionConfigPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CollectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionConfigPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionConfigPackage(CollectionConfigPackage other) : this() {
      config_ = other.config_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionConfigPackage Clone() {
      return new CollectionConfigPackage(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.CollectionConfig> _repeated_config_codec
        = pb::FieldCodec.ForMessage(10, global::Common.CollectionConfig.Parser);
    private readonly pbc::RepeatedField<global::Common.CollectionConfig> config_ = new pbc::RepeatedField<global::Common.CollectionConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.CollectionConfig> Config {
      get { return config_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionConfigPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionConfigPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!config_.Equals(other.config_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= config_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      config_.WriteTo(output, _repeated_config_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += config_.CalculateSize(_repeated_config_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionConfigPackage other) {
      if (other == null) {
        return;
      }
      config_.Add(other.config_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            config_.AddEntriesFrom(input, _repeated_config_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CollectionConfig defines the configuration of a collection object;
  /// it currently contains a single, static type.
  /// Dynamic collections are deferred.
  /// </summary>
  public sealed partial class CollectionConfig : pb::IMessage<CollectionConfig> {
    private static readonly pb::MessageParser<CollectionConfig> _parser = new pb::MessageParser<CollectionConfig>(() => new CollectionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CollectionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionConfig(CollectionConfig other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.StaticCollectionConfig:
          StaticCollectionConfig = other.StaticCollectionConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionConfig Clone() {
      return new CollectionConfig(this);
    }

    /// <summary>Field number for the "static_collection_config" field.</summary>
    public const int StaticCollectionConfigFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StaticCollectionConfig StaticCollectionConfig {
      get { return payloadCase_ == PayloadOneofCase.StaticCollectionConfig ? (global::Common.StaticCollectionConfig) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StaticCollectionConfig;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      StaticCollectionConfig = 1,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StaticCollectionConfig, other.StaticCollectionConfig)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.StaticCollectionConfig) hash ^= StaticCollectionConfig.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.StaticCollectionConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(StaticCollectionConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.StaticCollectionConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StaticCollectionConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionConfig other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.StaticCollectionConfig:
          if (StaticCollectionConfig == null) {
            StaticCollectionConfig = new global::Common.StaticCollectionConfig();
          }
          StaticCollectionConfig.MergeFrom(other.StaticCollectionConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.StaticCollectionConfig subBuilder = new global::Common.StaticCollectionConfig();
            if (payloadCase_ == PayloadOneofCase.StaticCollectionConfig) {
              subBuilder.MergeFrom(StaticCollectionConfig);
            }
            input.ReadMessage(subBuilder);
            StaticCollectionConfig = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// StaticCollectionConfig constitutes the configuration parameters of a
  /// static collection object. Static collections are collections that are
  /// known at chaincode instantiation time, and that cannot be changed.
  /// Dynamic collections are deferred.
  /// </summary>
  public sealed partial class StaticCollectionConfig : pb::IMessage<StaticCollectionConfig> {
    private static readonly pb::MessageParser<StaticCollectionConfig> _parser = new pb::MessageParser<StaticCollectionConfig>(() => new StaticCollectionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StaticCollectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CollectionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaticCollectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaticCollectionConfig(StaticCollectionConfig other) : this() {
      name_ = other.name_;
      memberOrgsPolicy_ = other.memberOrgsPolicy_ != null ? other.memberOrgsPolicy_.Clone() : null;
      requiredPeerCount_ = other.requiredPeerCount_;
      maximumPeerCount_ = other.maximumPeerCount_;
      blockToLive_ = other.blockToLive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaticCollectionConfig Clone() {
      return new StaticCollectionConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the name of the collection inside the denoted chaincode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "member_orgs_policy" field.</summary>
    public const int MemberOrgsPolicyFieldNumber = 2;
    private global::Common.CollectionPolicyConfig memberOrgsPolicy_;
    /// <summary>
    /// a reference to a policy residing / managed in the config block
    /// to define which orgs have access to this collection’s private data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.CollectionPolicyConfig MemberOrgsPolicy {
      get { return memberOrgsPolicy_; }
      set {
        memberOrgsPolicy_ = value;
      }
    }

    /// <summary>Field number for the "required_peer_count" field.</summary>
    public const int RequiredPeerCountFieldNumber = 3;
    private int requiredPeerCount_;
    /// <summary>
    /// The minimum number of peers private data will be sent to upon
    /// endorsement. The endorsement would fail if dissemination to at least
    /// this number of peers is not achieved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequiredPeerCount {
      get { return requiredPeerCount_; }
      set {
        requiredPeerCount_ = value;
      }
    }

    /// <summary>Field number for the "maximum_peer_count" field.</summary>
    public const int MaximumPeerCountFieldNumber = 4;
    private int maximumPeerCount_;
    /// <summary>
    /// The maximum number of peers that private data will be sent to
    /// upon endorsement. This number has to be bigger than required_peer_count.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaximumPeerCount {
      get { return maximumPeerCount_; }
      set {
        maximumPeerCount_ = value;
      }
    }

    /// <summary>Field number for the "block_to_live" field.</summary>
    public const int BlockToLiveFieldNumber = 5;
    private ulong blockToLive_;
    /// <summary>
    /// The number of blocks after which the collection data expires.
    /// For instance if the value is set to 10, a key last modified by block number 100
    /// will be purged at block number 111. A zero value is treated same as MaxUint64
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockToLive {
      get { return blockToLive_; }
      set {
        blockToLive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StaticCollectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StaticCollectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(MemberOrgsPolicy, other.MemberOrgsPolicy)) return false;
      if (RequiredPeerCount != other.RequiredPeerCount) return false;
      if (MaximumPeerCount != other.MaximumPeerCount) return false;
      if (BlockToLive != other.BlockToLive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (memberOrgsPolicy_ != null) hash ^= MemberOrgsPolicy.GetHashCode();
      if (RequiredPeerCount != 0) hash ^= RequiredPeerCount.GetHashCode();
      if (MaximumPeerCount != 0) hash ^= MaximumPeerCount.GetHashCode();
      if (BlockToLive != 0UL) hash ^= BlockToLive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (memberOrgsPolicy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MemberOrgsPolicy);
      }
      if (RequiredPeerCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RequiredPeerCount);
      }
      if (MaximumPeerCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaximumPeerCount);
      }
      if (BlockToLive != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(BlockToLive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (memberOrgsPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemberOrgsPolicy);
      }
      if (RequiredPeerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredPeerCount);
      }
      if (MaximumPeerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumPeerCount);
      }
      if (BlockToLive != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockToLive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StaticCollectionConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.memberOrgsPolicy_ != null) {
        if (memberOrgsPolicy_ == null) {
          memberOrgsPolicy_ = new global::Common.CollectionPolicyConfig();
        }
        MemberOrgsPolicy.MergeFrom(other.MemberOrgsPolicy);
      }
      if (other.RequiredPeerCount != 0) {
        RequiredPeerCount = other.RequiredPeerCount;
      }
      if (other.MaximumPeerCount != 0) {
        MaximumPeerCount = other.MaximumPeerCount;
      }
      if (other.BlockToLive != 0UL) {
        BlockToLive = other.BlockToLive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (memberOrgsPolicy_ == null) {
              memberOrgsPolicy_ = new global::Common.CollectionPolicyConfig();
            }
            input.ReadMessage(memberOrgsPolicy_);
            break;
          }
          case 24: {
            RequiredPeerCount = input.ReadInt32();
            break;
          }
          case 32: {
            MaximumPeerCount = input.ReadInt32();
            break;
          }
          case 40: {
            BlockToLive = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Collection policy configuration. Initially, the configuration can only
  /// contain a SignaturePolicy. In the future, the SignaturePolicy may be a
  /// more general Policy. Instead of containing the actual policy, the
  /// configuration may in the future contain a string reference to a policy.
  /// </summary>
  public sealed partial class CollectionPolicyConfig : pb::IMessage<CollectionPolicyConfig> {
    private static readonly pb::MessageParser<CollectionPolicyConfig> _parser = new pb::MessageParser<CollectionPolicyConfig>(() => new CollectionPolicyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionPolicyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CollectionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPolicyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPolicyConfig(CollectionPolicyConfig other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.SignaturePolicy:
          SignaturePolicy = other.SignaturePolicy.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionPolicyConfig Clone() {
      return new CollectionPolicyConfig(this);
    }

    /// <summary>Field number for the "signature_policy" field.</summary>
    public const int SignaturePolicyFieldNumber = 1;
    /// <summary>
    /// Initially, only a signature policy is supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.SignaturePolicyEnvelope SignaturePolicy {
      get { return payloadCase_ == PayloadOneofCase.SignaturePolicy ? (global::Common.SignaturePolicyEnvelope) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SignaturePolicy;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      SignaturePolicy = 1,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionPolicyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionPolicyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SignaturePolicy, other.SignaturePolicy)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.SignaturePolicy) hash ^= SignaturePolicy.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.SignaturePolicy) {
        output.WriteRawTag(10);
        output.WriteMessage(SignaturePolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.SignaturePolicy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignaturePolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionPolicyConfig other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.SignaturePolicy:
          if (SignaturePolicy == null) {
            SignaturePolicy = new global::Common.SignaturePolicyEnvelope();
          }
          SignaturePolicy.MergeFrom(other.SignaturePolicy);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.SignaturePolicyEnvelope subBuilder = new global::Common.SignaturePolicyEnvelope();
            if (payloadCase_ == PayloadOneofCase.SignaturePolicy) {
              subBuilder.MergeFrom(SignaturePolicy);
            }
            input.ReadMessage(subBuilder);
            SignaturePolicy = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CollectionCriteria defines an element of a private data that corresponds
  /// to a certain transaction and collection
  /// </summary>
  public sealed partial class CollectionCriteria : pb::IMessage<CollectionCriteria> {
    private static readonly pb::MessageParser<CollectionCriteria> _parser = new pb::MessageParser<CollectionCriteria>(() => new CollectionCriteria());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectionCriteria> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CollectionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionCriteria() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionCriteria(CollectionCriteria other) : this() {
      channel_ = other.channel_;
      txId_ = other.txId_;
      collection_ = other.collection_;
      namespace_ = other.namespace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectionCriteria Clone() {
      return new CollectionCriteria(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tx_id" field.</summary>
    public const int TxIdFieldNumber = 2;
    private string txId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TxId {
      get { return txId_; }
      set {
        txId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 3;
    private string collection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collection {
      get { return collection_; }
      set {
        collection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 4;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectionCriteria);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectionCriteria other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (TxId != other.TxId) return false;
      if (Collection != other.Collection) return false;
      if (Namespace != other.Namespace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (TxId.Length != 0) hash ^= TxId.GetHashCode();
      if (Collection.Length != 0) hash ^= Collection.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (TxId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TxId);
      }
      if (Collection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Collection);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Namespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (TxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TxId);
      }
      if (Collection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collection);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectionCriteria other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.TxId.Length != 0) {
        TxId = other.TxId;
      }
      if (other.Collection.Length != 0) {
        Collection = other.Collection;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            TxId = input.ReadString();
            break;
          }
          case 26: {
            Collection = input.ReadString();
            break;
          }
          case 34: {
            Namespace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
