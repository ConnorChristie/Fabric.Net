// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: orderer/ab.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Orderer {

  /// <summary>Holder for reflection information generated from orderer/ab.proto</summary>
  public static partial class AbReflection {

    #region Descriptor
    /// <summary>File descriptor for orderer/ab.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AbReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBvcmRlcmVyL2FiLnByb3RvEgdvcmRlcmVyGhNjb21tb24vY29tbW9uLnBy",
            "b3RvIkEKEUJyb2FkY2FzdFJlc3BvbnNlEh4KBnN0YXR1cxgBIAEoDjIOLmNv",
            "bW1vbi5TdGF0dXMSDAoEaW5mbxgCIAEoCSIMCgpTZWVrTmV3ZXN0IgwKClNl",
            "ZWtPbGRlc3QiHwoNU2Vla1NwZWNpZmllZBIOCgZudW1iZXIYASABKAQikQEK",
            "DFNlZWtQb3NpdGlvbhIlCgZuZXdlc3QYASABKAsyEy5vcmRlcmVyLlNlZWtO",
            "ZXdlc3RIABIlCgZvbGRlc3QYAiABKAsyEy5vcmRlcmVyLlNlZWtPbGRlc3RI",
            "ABIrCglzcGVjaWZpZWQYAyABKAsyFi5vcmRlcmVyLlNlZWtTcGVjaWZpZWRI",
            "AEIGCgRUeXBlIsUBCghTZWVrSW5mbxIkCgVzdGFydBgBIAEoCzIVLm9yZGVy",
            "ZXIuU2Vla1Bvc2l0aW9uEiMKBHN0b3AYAiABKAsyFS5vcmRlcmVyLlNlZWtQ",
            "b3NpdGlvbhIwCghiZWhhdmlvchgDIAEoDjIeLm9yZGVyZXIuU2Vla0luZm8u",
            "U2Vla0JlaGF2aW9yIjwKDFNlZWtCZWhhdmlvchIVChFCTE9DS19VTlRJTF9S",
            "RUFEWRAAEhUKEUZBSUxfSUZfTk9UX1JFQURZEAEiWwoPRGVsaXZlclJlc3Bv",
            "bnNlEiAKBnN0YXR1cxgBIAEoDjIOLmNvbW1vbi5TdGF0dXNIABIeCgVibG9j",
            "axgCIAEoCzINLmNvbW1vbi5CbG9ja0gAQgYKBFR5cGUyjwEKD0F0b21pY0Jy",
            "b2FkY2FzdBI/CglCcm9hZGNhc3QSEC5jb21tb24uRW52ZWxvcGUaGi5vcmRl",
            "cmVyLkJyb2FkY2FzdFJlc3BvbnNlIgAoATABEjsKB0RlbGl2ZXISEC5jb21t",
            "b24uRW52ZWxvcGUaGC5vcmRlcmVyLkRlbGl2ZXJSZXNwb25zZSIAKAEwAUJV",
            "CiVvcmcuaHlwZXJsZWRnZXIuZmFicmljLnByb3Rvcy5vcmRlcmVyWixnaXRo",
            "dWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy9wcm90b3Mvb3JkZXJlcmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.BroadcastResponse), global::Orderer.BroadcastResponse.Parser, new[]{ "Status", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.SeekNewest), global::Orderer.SeekNewest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.SeekOldest), global::Orderer.SeekOldest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.SeekSpecified), global::Orderer.SeekSpecified.Parser, new[]{ "Number" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.SeekPosition), global::Orderer.SeekPosition.Parser, new[]{ "Newest", "Oldest", "Specified" }, new[]{ "Type" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.SeekInfo), global::Orderer.SeekInfo.Parser, new[]{ "Start", "Stop", "Behavior" }, null, new[]{ typeof(global::Orderer.SeekInfo.Types.SeekBehavior) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orderer.DeliverResponse), global::Orderer.DeliverResponse.Parser, new[]{ "Status", "Block" }, new[]{ "Type" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BroadcastResponse : pb::IMessage<BroadcastResponse> {
    private static readonly pb::MessageParser<BroadcastResponse> _parser = new pb::MessageParser<BroadcastResponse>(() => new BroadcastResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BroadcastResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastResponse(BroadcastResponse other) : this() {
      status_ = other.status_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastResponse Clone() {
      return new BroadcastResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Common.Status status_ = 0;
    /// <summary>
    /// Status code, which may be used to programatically respond to success/failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private string info_ = "";
    /// <summary>
    /// Info string which may contain additional information about the status returned
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BroadcastResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BroadcastResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BroadcastResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::Common.Status) input.ReadEnum();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SeekNewest : pb::IMessage<SeekNewest> {
    private static readonly pb::MessageParser<SeekNewest> _parser = new pb::MessageParser<SeekNewest>(() => new SeekNewest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeekNewest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekNewest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekNewest(SeekNewest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekNewest Clone() {
      return new SeekNewest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeekNewest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeekNewest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeekNewest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SeekOldest : pb::IMessage<SeekOldest> {
    private static readonly pb::MessageParser<SeekOldest> _parser = new pb::MessageParser<SeekOldest>(() => new SeekOldest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeekOldest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekOldest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekOldest(SeekOldest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekOldest Clone() {
      return new SeekOldest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeekOldest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeekOldest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeekOldest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SeekSpecified : pb::IMessage<SeekSpecified> {
    private static readonly pb::MessageParser<SeekSpecified> _parser = new pb::MessageParser<SeekSpecified>(() => new SeekSpecified());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeekSpecified> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekSpecified() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekSpecified(SeekSpecified other) : this() {
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekSpecified Clone() {
      return new SeekSpecified(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private ulong number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeekSpecified);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeekSpecified other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Number != 0UL) hash ^= Number.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Number != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Number != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Number);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeekSpecified other) {
      if (other == null) {
        return;
      }
      if (other.Number != 0UL) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Number = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SeekPosition : pb::IMessage<SeekPosition> {
    private static readonly pb::MessageParser<SeekPosition> _parser = new pb::MessageParser<SeekPosition>(() => new SeekPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeekPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekPosition(SeekPosition other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Newest:
          Newest = other.Newest.Clone();
          break;
        case TypeOneofCase.Oldest:
          Oldest = other.Oldest.Clone();
          break;
        case TypeOneofCase.Specified:
          Specified = other.Specified.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekPosition Clone() {
      return new SeekPosition(this);
    }

    /// <summary>Field number for the "newest" field.</summary>
    public const int NewestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orderer.SeekNewest Newest {
      get { return typeCase_ == TypeOneofCase.Newest ? (global::Orderer.SeekNewest) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Newest;
      }
    }

    /// <summary>Field number for the "oldest" field.</summary>
    public const int OldestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orderer.SeekOldest Oldest {
      get { return typeCase_ == TypeOneofCase.Oldest ? (global::Orderer.SeekOldest) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Oldest;
      }
    }

    /// <summary>Field number for the "specified" field.</summary>
    public const int SpecifiedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orderer.SeekSpecified Specified {
      get { return typeCase_ == TypeOneofCase.Specified ? (global::Orderer.SeekSpecified) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Specified;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Newest = 1,
      Oldest = 2,
      Specified = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeekPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeekPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Newest, other.Newest)) return false;
      if (!object.Equals(Oldest, other.Oldest)) return false;
      if (!object.Equals(Specified, other.Specified)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Newest) hash ^= Newest.GetHashCode();
      if (typeCase_ == TypeOneofCase.Oldest) hash ^= Oldest.GetHashCode();
      if (typeCase_ == TypeOneofCase.Specified) hash ^= Specified.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Newest) {
        output.WriteRawTag(10);
        output.WriteMessage(Newest);
      }
      if (typeCase_ == TypeOneofCase.Oldest) {
        output.WriteRawTag(18);
        output.WriteMessage(Oldest);
      }
      if (typeCase_ == TypeOneofCase.Specified) {
        output.WriteRawTag(26);
        output.WriteMessage(Specified);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Newest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Newest);
      }
      if (typeCase_ == TypeOneofCase.Oldest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Oldest);
      }
      if (typeCase_ == TypeOneofCase.Specified) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Specified);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeekPosition other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Newest:
          if (Newest == null) {
            Newest = new global::Orderer.SeekNewest();
          }
          Newest.MergeFrom(other.Newest);
          break;
        case TypeOneofCase.Oldest:
          if (Oldest == null) {
            Oldest = new global::Orderer.SeekOldest();
          }
          Oldest.MergeFrom(other.Oldest);
          break;
        case TypeOneofCase.Specified:
          if (Specified == null) {
            Specified = new global::Orderer.SeekSpecified();
          }
          Specified.MergeFrom(other.Specified);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Orderer.SeekNewest subBuilder = new global::Orderer.SeekNewest();
            if (typeCase_ == TypeOneofCase.Newest) {
              subBuilder.MergeFrom(Newest);
            }
            input.ReadMessage(subBuilder);
            Newest = subBuilder;
            break;
          }
          case 18: {
            global::Orderer.SeekOldest subBuilder = new global::Orderer.SeekOldest();
            if (typeCase_ == TypeOneofCase.Oldest) {
              subBuilder.MergeFrom(Oldest);
            }
            input.ReadMessage(subBuilder);
            Oldest = subBuilder;
            break;
          }
          case 26: {
            global::Orderer.SeekSpecified subBuilder = new global::Orderer.SeekSpecified();
            if (typeCase_ == TypeOneofCase.Specified) {
              subBuilder.MergeFrom(Specified);
            }
            input.ReadMessage(subBuilder);
            Specified = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SeekInfo specifies the range of requested blocks to return
  /// If the start position is not found, an error is immediately returned
  /// Otherwise, blocks are returned until a missing block is encountered, then behavior is dictated
  /// by the SeekBehavior specified.  If BLOCK_UNTIL_READY is specified, the reply will block until
  /// the requested blocks are available, if FAIL_IF_NOT_READY is specified, the reply will return an
  /// error indicating that the block is not found.  To request that all blocks be returned indefinitely
  /// as they are created, behavior should be set to BLOCK_UNTIL_READY and the stop should be set to
  /// specified with a number of MAX_UINT64
  /// </summary>
  public sealed partial class SeekInfo : pb::IMessage<SeekInfo> {
    private static readonly pb::MessageParser<SeekInfo> _parser = new pb::MessageParser<SeekInfo>(() => new SeekInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SeekInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekInfo(SeekInfo other) : this() {
      start_ = other.start_ != null ? other.start_.Clone() : null;
      stop_ = other.stop_ != null ? other.stop_.Clone() : null;
      behavior_ = other.behavior_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SeekInfo Clone() {
      return new SeekInfo(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private global::Orderer.SeekPosition start_;
    /// <summary>
    /// The position to start the deliver from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orderer.SeekPosition Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "stop" field.</summary>
    public const int StopFieldNumber = 2;
    private global::Orderer.SeekPosition stop_;
    /// <summary>
    /// The position to stop the deliver
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orderer.SeekPosition Stop {
      get { return stop_; }
      set {
        stop_ = value;
      }
    }

    /// <summary>Field number for the "behavior" field.</summary>
    public const int BehaviorFieldNumber = 3;
    private global::Orderer.SeekInfo.Types.SeekBehavior behavior_ = 0;
    /// <summary>
    /// The behavior when a missing block is encountered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orderer.SeekInfo.Types.SeekBehavior Behavior {
      get { return behavior_; }
      set {
        behavior_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SeekInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SeekInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(Stop, other.Stop)) return false;
      if (Behavior != other.Behavior) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (start_ != null) hash ^= Start.GetHashCode();
      if (stop_ != null) hash ^= Stop.GetHashCode();
      if (Behavior != 0) hash ^= Behavior.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (start_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Start);
      }
      if (stop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stop);
      }
      if (Behavior != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Behavior);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (stop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stop);
      }
      if (Behavior != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Behavior);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SeekInfo other) {
      if (other == null) {
        return;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          start_ = new global::Orderer.SeekPosition();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.stop_ != null) {
        if (stop_ == null) {
          stop_ = new global::Orderer.SeekPosition();
        }
        Stop.MergeFrom(other.Stop);
      }
      if (other.Behavior != 0) {
        Behavior = other.Behavior;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (start_ == null) {
              start_ = new global::Orderer.SeekPosition();
            }
            input.ReadMessage(start_);
            break;
          }
          case 18: {
            if (stop_ == null) {
              stop_ = new global::Orderer.SeekPosition();
            }
            input.ReadMessage(stop_);
            break;
          }
          case 24: {
            behavior_ = (global::Orderer.SeekInfo.Types.SeekBehavior) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SeekInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SeekBehavior {
        [pbr::OriginalName("BLOCK_UNTIL_READY")] BlockUntilReady = 0,
        [pbr::OriginalName("FAIL_IF_NOT_READY")] FailIfNotReady = 1,
      }

    }
    #endregion

  }

  public sealed partial class DeliverResponse : pb::IMessage<DeliverResponse> {
    private static readonly pb::MessageParser<DeliverResponse> _parser = new pb::MessageParser<DeliverResponse>(() => new DeliverResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeliverResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orderer.AbReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverResponse(DeliverResponse other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Status:
          Status = other.Status;
          break;
        case TypeOneofCase.Block:
          Block = other.Block.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverResponse Clone() {
      return new DeliverResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Status Status {
      get { return typeCase_ == TypeOneofCase.Status ? (global::Common.Status) type_ : 0; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.Status;
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Block Block {
      get { return typeCase_ == TypeOneofCase.Block ? (global::Common.Block) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Block;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Status = 1,
      Block = 2,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeliverResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeliverResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(Block, other.Block)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Status) hash ^= Status.GetHashCode();
      if (typeCase_ == TypeOneofCase.Block) hash ^= Block.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Status) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (typeCase_ == TypeOneofCase.Block) {
        output.WriteRawTag(18);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Status) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (typeCase_ == TypeOneofCase.Block) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeliverResponse other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Status:
          Status = other.Status;
          break;
        case TypeOneofCase.Block:
          if (Block == null) {
            Block = new global::Common.Block();
          }
          Block.MergeFrom(other.Block);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.Status;
            break;
          }
          case 18: {
            global::Common.Block subBuilder = new global::Common.Block();
            if (typeCase_ == TypeOneofCase.Block) {
              subBuilder.MergeFrom(Block);
            }
            input.ReadMessage(subBuilder);
            Block = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
